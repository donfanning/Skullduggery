package edu.uc.skullduggery;

import java.security.InvalidKeyException;
import java.security.NoSuchAlgorithmException;

import java.io.Serializable;
import javax.crypto.KeyGenerator;
import javax.crypto.Mac;
import javax.crypto.SecretKey;

import android.os.Bundle;

public class SkullUserInfo implements Serializable {
	/**
	 * Serial version generated by Java. Change if you want, I think. 
	 */
	private static final long serialVersionUID = 5505391523869325110L;

	private final String HMAC = "HmacSHA1";
	
	private SecretKey _salt;
	private byte[] _pubKeyHash;
	private String _number;
	
	public SkullUserInfo(String number) throws NoSuchAlgorithmException
	{
		KeyGenerator keygen = KeyGenerator.getInstance(HMAC);
		_salt = keygen.generateKey();
		_number = number;
	}
	
	public boolean matchStoredPubKey(byte[] pubKey) throws InvalidKeyException, NoSuchAlgorithmException
	{
		Mac mac = Mac.getInstance(HMAC);
		mac.init(_salt);
		byte[] pkHash = mac.doFinal(pubKey);
		
		return java.util.Arrays.equals(pkHash, _pubKeyHash);
	}
	
	public void storePubKey(byte[] pubKey) throws NoSuchAlgorithmException, InvalidKeyException
	{
		Mac mac = Mac.getInstance(HMAC);
		mac.init(_salt);
		_pubKeyHash = mac.doFinal(pubKey);
	}
	
	public void saveUserInfo(Bundle savedInstanceState, SkullUserInfo u)
	{
		savedInstanceState.putSerializable(u._number,u);
	}
}
